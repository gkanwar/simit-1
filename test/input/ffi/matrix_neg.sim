element Vertex
  a : float;
  b : float;
end

element Edge
  e : float;
end

extern V : set{Vertex};
extern E : set{Edge}(V,V);

extern func matrix_neg(A : matrix[V,V](float)) -> (B : matrix[V,V](float));

func f(e : Edge, v : (Vertex*2)) -> (A : tensor[V,V](float))
  A(v(0),v(0)) = e.e;
  A(v(0),v(1)) = e.e;
  A(v(1),v(0)) = e.e;
  A(v(1),v(1)) = e.e;
end

proc main
  B = map f to E reduce +;
	A = matrix_neg(B);
  V.a = A * V.b;
end
