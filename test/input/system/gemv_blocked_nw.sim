element Point
  b : tensor[2](float);
  c : tensor[2](float);
end

element Spring
  a : tensor[2,2](float);
end

extern points  : set{Point};
extern springs : set{Spring}(points,points);

func dist_a(s : Spring, p : (Point*2)) ->
    (M : tensor[points,points](tensor[2,2](float)))
  M(p(0),p(0)) = s.a;
end

export func main()
  A = map dist_a to springs reduce +;
  points.c = A * points.b;
end
